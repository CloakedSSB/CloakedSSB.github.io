{"version":3,"sources":["body/SettingsDialog.js","header/AppBar.js","App.js","serviceWorker.js","index.js"],"names":["Settings","props","react_default","a","createElement","Typography_default","Stages","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","value","index","temp","state","stageType","slice","setState","tempObj","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","i","stages","err","return","setStageObj","base_url","ext","length","_this2","style","display","flexWrap","justifyContent","map","flexDirection","key","src","alt","width","height","FormControl_default","InputLabel_default","shrink","Select_default","onChange","event","target","input","Input_default","name","displayEmpty","MenuItem_default","React","Component","Connection","SettingsDialog","_this3","tab","handleClose","open","console","log","stageObj","prevProps","prevState","snapshot","Dialog_default","fullWidth","maxWidth","onClose","Tabs_default","variant","indicatorColor","textColor","Tab_default","label","DialogContent_default","SettingsDialog_Settings","SettingsDialog_Stages","DialogActions_default","Button_default","onClick","color","autoFocus","myAppBar","classes","className","root","AppBar_default","Toolbar_default","alignItems","IconButton_default","rightButton","toggle","Settings_default","withStyles","flexGrow","grow","menuButton","marginLeft","marginRight","alignSelf","theme","createMuiTheme","palette","primary","blue","secondary","red","App","obj","toggleSettings","openSettings","MuiThemeProvider_default","header_AppBar","body_SettingsDialog","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71748f77.chunk.js","sourcesContent":["import React from 'react'\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport fs from 'fs';\n\n\nfunction Settings(props) {\n\n  return(\n    <Typography>Settings</Typography>\n  );\n\n}\n\nclass Stages extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.base_url = \"https://www.smashbros.com/assets_v2/img/stage/stage_img\";\n\n    this.ext = \".jpg\";\n\n    this.stages = [1, 3, 8, 19, 20, 24, 33, 37, 39, 40, 42, 44, 62, 79, 85];\n\n    const temp = []  ;\n    for (let i = 0; i < this.stages.length; i++) {\n      temp[i] = \"\"\n    }\n\n    this.state = {\n      stageType: temp\n    }\n\n  }\n\n  handleChange = (value, index) => {\n    const temp = this.state.stageType.slice();\n    temp[index] = value;\n    this.setState({stageType: temp});\n    let tempObj = {};\n    for (let [i, value] of this.state.stageType.values()) {\n      if (value) {\n        tempObj[this.stages[i]] = value;\n      }\n    }\n    this.props.setStageObj(tempObj);\n  };\n\n  render() {\n\n    return(\n      <div style={{display: \"flex\", flexWrap: \"wrap\" ,justifyContent: \"space-around\"}}>\n        {this.stages.map( (value, index) => (\n          <div style={{display: \"flex\", flexDirection: \"column\"}} key={value}>\n            <img src={this.base_url + value + this.ext} alt={value} width=\"375\" height=\"211\"/>\n            <FormControl>\n              <InputLabel shrink>Type</InputLabel>\n              <Select\n                value={this.state.stageType[index]}\n                onChange={(event) => this.handleChange(event.target.value, index)}\n                input={<Input name=\"type\"/>}\n                displayEmpty\n              >\n                <MenuItem value={\"\"}>Disabled</MenuItem>\n                <MenuItem value={\"Starter\"}>Starter</MenuItem>\n                <MenuItem value={\"Counterpick\"}>Counterpick</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n        ))}\n      </div>\n    );\n\n  }\n\n\n\n}\n\nfunction Connection(props) {\n\n  return(\n    <Typography>Connection</Typography>\n  );\n\n}\n\nclass SettingsDialog extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      tab: 0,\n      open: this.props.open\n    };\n\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps !== this.props) {\n      this.setState({\n        open: this.props.open\n      })\n    }\n  }\n\n\n  handleChange = (event, value) => {\n    this.setState({ tab: value });\n  };\n\n  handleClose = () => {\n    this.setState({open: false})\n    console.log(this.props.stageObj)\n  };\n\n  render() {\n\n    return (\n      <Dialog open={this.state.open} fullWidth maxWidth={\"lg\"} onClose={this.handleClose}>\n        <Tabs\n          value={this.state.tab}\n          variant={\"fullWidth\"}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={this.handleChange}\n        >\n          <Tab label=\"Settings\" />\n          <Tab label=\"Stages\" />\n          <Tab label=\"Connection\" />\n        </Tabs>\n        <DialogContent>\n          {this.state.tab === 0 && <Settings/>}\n          {this.state.tab === 1 && <Stages setStageObj={this.props.setStageObj}/>}\n          {this.state.tab === 2 && <Connection/>}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n}\n\n\nexport default SettingsDialog","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport SettingsDialog from  '../body/SettingsDialog'\n\n\nconst styles = {\n    root: {\n      flexGrow: 1,\n      justifyContent: \"space-between\"\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    rightButton: {\n        alignSelf: \"flex-right\"\n    }\n};\n\nclass myAppBar extends React.Component{\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n          <div className={classes.root}>\n              <AppBar>\n                  <Toolbar className={classes.root}>\n                      <div style={{display: 'flex', flexDirection: 'row', alignItems: \"center\"}}>\n                          <Typography variant={\"h6\"} color={\"inherit\"}>Stage Bans</Typography>\n                      </div>\n                      <div>\n                          <IconButton className={classes.rightButton} color={\"inherit\"} onClick={this.props.toggle}>\n                              <SettingsIcon/>\n                          </IconButton>\n                      </div>\n                  </Toolbar>\n              </AppBar>\n          </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(myAppBar);\n","import React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport AppBar from './header/AppBar'\nimport blue from \"@material-ui/core/colors/blue\";\nimport red from \"@material-ui/core/colors/red\";\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport SettingsDialog from \"./body/SettingsDialog\";\n\n\nconst theme = createMuiTheme(\n    {\n      palette: {\n        primary: blue,\n        secondary: red,\n      },\n    }\n);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      stageObj: {},\n      openSettings: false\n    }\n  }\n\n  setStageObj = (obj) => {\n    this.setState({stageObj: obj})\n  };\n\n  toggleSettings = () => {\n    this.setState({openSettings: !this.state.openSettings})\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div>\n          <AppBar toggle={this.toggleSettings}/>\n        </div>\n        <SettingsDialog open={this.state.openSettings} setStageObj={this.setStageObj} />\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}